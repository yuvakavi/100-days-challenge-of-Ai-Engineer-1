# -------------------------------------
# Hierarchical Clustering - Document Clustering
# -------------------------------------

from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.cluster import AgglomerativeClustering
from scipy.cluster.hierarchy import dendrogram, linkage
import matplotlib.pyplot as plt

# Sample Documents
documents = [
    "Apple releases new iPhone with better camera",
    "Samsung launches new Galaxy smartphone",
    "Python is a popular programming language",
    "Machine learning and AI are transforming industries",
    "Google introduces new Android update",
    "AI and deep learning improve image recognition"
]

# Step 1: Convert documents to TF-IDF vectors
vectorizer = TfidfVectorizer(stop_words='english')
X = vectorizer.fit_transform(documents)

# Step 2: Apply Agglomerative Clustering
model = AgglomerativeClustering(n_clusters=2, affinity='euclidean', linkage='ward')
labels = model.fit_predict(X.toarray())

# Step 3: Print cluster assignments
for i, doc in enumerate(documents):
    print(f"Document {i+1} (Cluster {labels[i]}): {doc}")

# Step 4: Visualize the dendrogram
linkage_matrix = linkage(X.toarray(), method='ward')
plt.figure(figsize=(8, 4))
dendrogram(linkage_matrix, labels=[f'Doc{i+1}' for i in range(len(documents))])
plt.title("Hierarchical Clustering Dendrogram")
plt.xlabel("Documents")
plt.ylabel("Distance")
plt.show()
