import numpy as np

# AND gate dataset
X = np.array([
    [0, 0],
    [0, 1],
    [1, 0],
    [1, 1]
])

y = np.array([0, 0, 0, 1])  # AND gate output

# Initialize weights and bias
weights = np.zeros(X.shape[1])
bias = 0
learning_rate = 0.1

# Training the perceptron
for epoch in range(10):
    for i in range(len(X)):
        linear_output = np.dot(X[i], weights) + bias
        prediction = 1 if linear_output > 0 else 0
        error = y[i] - prediction
        
        # Update rule
        weights += learning_rate * error * X[i]
        bias += learning_rate * error

print("Trained weights:", weights)
print("Trained bias:", bias)

# Test
for i in range(len(X)):
    linear_output = np.dot(X[i], weights) + bias
    prediction = 1 if linear_output > 0 else 0
    print(f"Input: {X[i]} â†’ Predicted Output: {prediction}")
