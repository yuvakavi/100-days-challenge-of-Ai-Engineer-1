import numpy as np
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler

# ---------- Step 1: Create manual dataset ----------
X = np.array([
    [2.5, 2.4, 1.5],
    [0.5, 0.7, 0.8],
    [2.2, 2.9, 2.0],
    [1.9, 2.2, 1.6],
    [3.1, 3.0, 2.4],
    [2.3, 2.7, 1.9],
    [2.0, 1.6, 1.3],
    [1.0, 1.1, 0.9]
])

# ---------- Step 2: Standardize data ----------
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# ---------- Step 3: Apply PCA (reduce 3D â†’ 2D) ----------
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

# ---------- Step 4: Visualize ----------
plt.figure(figsize=(7,5))
plt.scatter(X_pca[:, 0], X_pca[:, 1], color='blue')
for i in range(len(X_pca)):
    plt.text(X_pca[i, 0]+0.05, X_pca[i, 1], f"P{i+1}")

plt.title("PCA - 2D Visualization (Manual Data)")
plt.xlabel("Principal Component 1")
plt.ylabel("Principal Component 2")
plt.grid(True)
plt.show()

# ---------- Step 5: Print Explained Variance ----------
print("Explained Variance Ratio:", pca.explained_variance_ratio_)
